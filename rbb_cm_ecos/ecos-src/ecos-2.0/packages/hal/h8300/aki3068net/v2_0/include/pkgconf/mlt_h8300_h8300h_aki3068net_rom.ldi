// eCos memory layout - Fri Oct 20 08:25:16 2000

// This is a generated file - do not edit

#include <cyg/infra/cyg_type.inc>

OUTPUT_FORMAT("elf32-h8300")
OUTPUT_ARCH(h8300h)

MEMORY
{
    rom : ORIGIN = 0x000000, LENGTH = 0x60000
#if !defined(CYGPKG_IO_ETH_DRIVERS)
    ram : ORIGIN = 0xffbf20, LENGTH = 0x4000-0x100
#else
    ram : ORIGIN = 0x5F4000, LENGTH = 0xC000
    iram : ORIGIN = 0xffbf20, LENGTH = 0x4000-0x100
#endif
}

SECTIONS
{
    SECTIONS_BEGIN
    SECTION_rom_vectors (rom, 0x000000, LMA_EQ_VMA)
    SECTION_text (rom, ALIGN (0x1), LMA_EQ_VMA)
    SECTION_fini (rom, ALIGN (0x1), LMA_EQ_VMA)
    SECTION_rodata (rom, ALIGN (0x1), LMA_EQ_VMA)
    SECTION_rodata1 (rom, ALIGN (0x1), LMA_EQ_VMA)
    SECTION_fixup (rom, ALIGN (0x1), LMA_EQ_VMA)
    SECTION_gcc_except_table (rom, ALIGN (0x1), LMA_EQ_VMA)
#if !defined(CYGPKG_IO_ETH_DRIVERS)
    SECTION_int_fook_table (ram, 0xffbf20,FOLLOWING (.gcc_except_table))
    SECTION_data (ram, ALIGN (0x4),FOLLOWING (.int_fook_table))
    SECTION_bss (ram, ALIGN (0x4),LMA_EQ_VMA)
#else
    SECTION_data (ram, 0x5F4000,FOLLOWING (.gcc_except_table))
    SECTION_bss (ram, ALIGN (0x4),LMA_EQ_VMA)
    SECTION_int_fook_table (iram, 0xffbf20,FOLLOWING (.data))
#endif
    SECTIONS_END
}
