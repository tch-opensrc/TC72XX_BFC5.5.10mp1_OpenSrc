2003-03-14  Nick Garnett  <nickg@balti.calivar.com>

	* src/if_quicc.c: Fixed several bugs, mostly dealing with getting
	the device restarted after certain failures such as collisions.

	* src/quicc_eth.h: Added some statistics gathering.
	
2003-03-06  Gary Thomas  <gary@mlbassoc.com>

	* src/if_quicc.c (quicc_eth_init): New name for CPM/DPRAM allocator.

2002-11-25  Gary Thomas  <gthomas@ecoscentric.com>

	* src/quicc_eth.h: 
	* src/if_quicc.c: Split platform specifics into separate packages.

2002-08-08  Gary Thomas  <gthomas@ecoscentric.com>
2002-08-08  Luoqi Chen <lchen@onetta.com>

	* src/if_quicc.c (quicc_eth_send): Need to flush cache to force
	out data, not invalidate it.

2002-06-14  Gary Thomas  <gary@chez-thomas.org>

	* src/if_quicc.c: 
	Need to include <pkgconf/io_eth_drivers.h> for proper configuration
	of stand-alone (polled) vs. system (interrupt driven) mode.

2002-05-30  Jonathan Larmour  <jlarmour@redhat.com>

	* src/if_quicc.c: Use CYGINT_IO_ETH_INT_SUPPORT_REQUIRED where
	appropriate.

2001-08-22  Gary Thomas  <gthomas@redhat.com>

	* src/if_quicc.c: 
	printf() is no longer a part of RedBoot.  Thus all programs
	must use diag_printf() and related functions instead.

2001-05-07  Gary Thomas  <gthomas@redhat.com>

	* src/if_quicc.c (quicc_eth_init): Get ESA from RedBoot 'fconfig' data.
	Improve interrupt interroperability when running with RedBoot and
	sharing the network connection.  Proper operation requires a new
	RedBoot at least as new as this file.

2001-01-30  Gary Thomas  <gthomas@redhat.com>

	* src/if_quicc.c: New RedBoot config data layout.

2001-01-03  Gary Thomas  <gthomas@redhat.com>

	* src/if_quicc.c: Add support in RedBoot to keep ESA (since
	the I2C interface is really broken).

2000-10-20  Gary Thomas  <gthomas@redhat.com>

	* src/if_quicc.c: Changes to compile in stand-alone mode.

2000-09-01  Hugo Tyson  <hmt@cygnus.co.uk>

	* src/if_quicc.c (quicc_eth_init): Work with new fast net
	thread to do all the copying work instead of loading up DSR time.
	In detail:
	 o New "deliver" function in the interface record.
	 o The DSR changed to be that new function; its arg is now the sc
	   pointer already, no cast needed.
	 o In creating the interrupt, use eth_drv_dsr (from the logical
	   driver) instead of quicc_eth_dsr (which is gone).


2000-08-23  Gary Thomas  <gthomas@redhat.com>

	* src/if_quicc.c: Add function to return interrupt vector used
	by the interface.

2000-08-03  Gary Thomas  <gthomas@redhat.com>

	* cdl/quicc_eth_drivers.cdl: Ethernet driver package hierarchy changed.

2000-07-26  Gary Thomas  <gthomas@redhat.com>

	* src/if_quicc.c: Update for new eth_drv interfaces.

2000-06-22  Hugo Tyson  <hmt@cygnus.co.uk>

	* cdl/<yournamehere>.cdl: Remove the comment on the empty
	include_files directive; the tools now support this correctly.
	This keeps internal include files internal.

2000-04-07  Hugo Tyson  <hmt@cygnus.co.uk>

	* ecos.db: Re-organize device packages.  This is a massive change
	involving deleting all the sources for serial and ethernet drivers
	from where they used to live in
	    packages/io/serial/current/src/ARCH/PLATFORM.[ch]
	    packages/net/drivers/eth/PLATFORM/current/src/...
	and reinstating them in
	    packages/devs/serial/ARCH/PLATFORM/current/src/...
	    packages/devs/eth/ARCH/PLATFORM/current/src/...

	All these new packages are properly defined in ecos.db, and are
	all of type "hardware" so that a "target" can grab them.
	
	This directory layout is descriptive of the devices we have right
	now, arch and platform are separate levels just to make it easier
	to navigate in the filesystem and similar to the HAL structure in
	the filesystem.

	It is *not* prescriptive of future work; for example, the mythical
	common highly-portable 16550 serial driver which works on many
	targets would be called "devs/serial/s16550/current", or a serial
	device for a particular board (cogent springs to mind) that can
	work with different CPUs fitted is "devs/serial/cogent/current".

	Changelogs have been preserved and replicated over all the new
	packages, so that no history is lost.

	The contents of individual source files are unchanged; they build
	in just the same emvironment except for a very few cases where the
	config file name changed in this movement.

	Targets in ecos.db have been redefined to bring in all relevant
	hardware packages including net and serial drivers (but the newly
	included packages are only active if their desired parent is
	available.)
	
	The names of CDL options (and their #defines of course) stay the
	same for the serial drivers, for backward compatibility.

	* templates/*/current.ect: these have had CYGPKG_IO_SERIAL added
	rather than it being in (almost) all target definitions.
	
2000-03-28  Gary Thomas  <gthomas@redhat.com>

	* src/if_quicc.c (quicc_eth_recv): Handle case where there were
	no buffers (and thus the sg_list[] contains NULL pointers).

2000-03-06  Gary Thomas  <gthomas@redhat.com>

	* src/if_quicc.c: New driver API.

2000-03-05  Gary Thomas  <gthomas@redhat.com>

	* src/if_quicc.c: Cleanup to remove compiler warnings.

2000-03-03  Gary Thomas  <gthomas@redhat.com>

	* src/quicc_eth.h: Move standard CPM defines to common (ppc8xx.h).

	* src/if_quicc.c: Fetch ethernet hardware address (MAC) from the
	board EEPROM.  Also remove a bunch of diagnostic prints which aren't
	needed any longer, now that the device is properly running.

2000-03-01  Gary Thomas  <gthomas@redhat.com>

	* src/quicc_eth.h (MBX_CTL1): 
	* src/if_quicc.c (quicc_eth_init): Add intialization of board control
	register which lets driver work when booted from eCos/GDB.

2000-03-01  Gary Thomas  <gthomas@cygnus.co.uk>

	* src/if_quicc.c: Lots of fixes.  Now works, but only if application
	is booted via PPCbug (some initialization is still missing).

2000-02-29  Gary Thomas  <gthomas@cygnus.co.uk>

	* src/quicc_eth.h:
	* src/if_quicc.c: Some improvements.  Almost works when booted via
	PPCbug, but not from eCos/GDB.

2000-02-21  Gary Thomas  <gthomas@cygnus.co.uk>

	* cdl/quicc_eth_drivers.cdl: 
	* src/quicc_eth.h
	* src/if_quicc.c: New file(s).

//===========================================================================
//####ECOSGPLCOPYRIGHTBEGIN####
// -------------------------------------------
// This file is part of eCos, the Embedded Configurable Operating System.
// Copyright (C) 1998, 1999, 2000, 2001, 2002 Red Hat, Inc.
//
// eCos is free software; you can redistribute it and/or modify it under
// the terms of the GNU General Public License as published by the Free
// Software Foundation; either version 2 or (at your option) any later version.
//
// eCos is distributed in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// for more details.
//
// You should have received a copy of the GNU General Public License along
// with eCos; if not, write to the Free Software Foundation, Inc.,
// 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.
//
// As a special exception, if other files instantiate templates or use macros
// or inline functions from this file, or you compile this file and link it
// with other works to produce a work based on this file, this file does not
// by itself cause the resulting work to be covered by the GNU General Public
// License. However the source code for this file must still be made available
// in accordance with section (3) of the GNU General Public License.
//
// This exception does not invalidate any other reasons why a work based on
// this file might be covered by the GNU General Public License.
//
// Alternative licenses for eCos may be arranged by contacting Red Hat, Inc.
// at http://sources.redhat.com/ecos/ecos-license/
// -------------------------------------------
//####ECOSGPLCOPYRIGHTEND####
//===========================================================================
	
	

