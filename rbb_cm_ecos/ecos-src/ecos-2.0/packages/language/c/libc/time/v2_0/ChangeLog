2003-02-24  Jonathan Larmour  <jifl@eCosCentric.com>

	* cdl/time.cdl: Fix doc link.

2003-01-28  Jonathan Larmour  <jifl@eCosCentric.com>

	* cdl/time.cdl: Correct reference to
	CYGSEM_LIBC_TIME_POSIX_TIME_ROUTINES in CYGPKG_LIBC_TIME_TESTS to
	CYGFUN_LIBC_TIME_POSIX.

2003-01-27  Gary Thomas  <gary@mlbassoc.com>

	* tests/strptime.c: 
	* src/strptime.cxx: 
	* include/time.h: 
	* cdl/time.cdl: Add support for strptime().

2002-05-14  Jesper Skov  <jskov@redhat.com>

	* cdl/time.cdl: Added -Wno-format to the compiler flags. This is
	to avoid warnings about Y2K problems with the format specifiers
	used in the strftime test.

2002-01-09  Nick Garnett  <nickg@redhat.com>

	* tests/clock.c (cyg_start): Added CYG_TEST_INIT() to
	NOTAPPLICABLE version of cyg_start() so that the breakpoints are
	correctly sequenced in the testfarm and it does not think that
	this is a failure.

2001-06-22  Jesper Skov  <jskov@redhat.com>

	* cdl/time.cdl (CYGFUN_LIBC_TIME_SUS_EXTNS): Added.
	* src/strftime.cxx (do_format): Added some Single UNIX
	extensions.

2001-04-25  Bart Veer  <bartv@redhat.com>

	* tests/time.c (MAX_TIMEOUT):
	Increase timeout to cope with fast architectures such as the
	synthetic target.

2001-04-17  Bart Veer  <bartv@redhat.com>

	* tests/clock.c:
	Cope with synthetic target reorg

2000-11-29  Jonathan Larmour  <jlarmour@redhat.com>

	* tests/clock.c: Some targets are quite inconsistent, so skip
	6 samples now, and increase the tolerance to 40%.
	Also NA if tracing enabled.
	Also output the mean and maximum error reached, even when passing.

2000-11-27  Jesper Skov  <jskov@redhat.com>

	* tests/clock.c: Skip fourth sample too.

2000-11-14  Jesper Skov  <jskov@redhat.com>

	* tests/clock.c: Skip first three samples.

2000-10-30  Jonathan Larmour  <jlarmour@redhat.com>

	* include/time.inl: Ensure POSIX *_r functions can be accessed by
	non-POSIX implementation even when CYGFUN_LIBC_TIME_POSIX is off.

	* src/asctime_r.cxx: No need to make conditional on posix CDL option - 
	we may want to define an internal-only function.
	* src/ctime_r.cxx: Ditto
	* src/gmtime_r.cxx: Ditto
	* src/localtime_r.cxx: Ditto

	* cdl/time.cdl: abs() is also a requirement

	* src/clock.cxx (clock): Always use unsigned long longs for temp
	variables (and make sure it's used), rather than making
	assumptions about clock_t.

	* tests/clock.c: Rewrite

2000-07-26  Jonathan Larmour  <jlarmour@redhat.co.uk>

	* cdl/time.cdl: Add CYGINT_ISO_DIV dependency

2000-07-24  Jonathan Larmour  <jlarmour@redhat.co.uk>

	* src/time.cxx: 
	* src/settime.cxx: 
	Wallclock moved to io/

2000-06-20  Jonathan Larmour  <jlarmour@redhat.co.uk>

	* include/time.inl (__gmtime_r): Don't save leap year status when
	calculating tm_wday

2000-06-17  Jonathan Larmour  <jlarmour@redhat.co.uk>

	* include/time.inl (gmtime_r): Deal with boundary case correctly

	* tests/gmtime.c (test): Add a couple more test cases

2000-05-02  Jonathan Larmour  <jlarmour@redhat.co.uk>

	* include/time.h: Just use the defaults for time_t, clock_t and
	CLOCKS_PER_SEC in isoinfra

	* New package
	Separated original libc out into separate packages on functional
	boundaries.
	Header files are now managed by isoinfra package
	Plenty of cleanups done, but no major functionality changes

//===========================================================================
//####ECOSGPLCOPYRIGHTBEGIN####
// -------------------------------------------
// This file is part of eCos, the Embedded Configurable Operating System.
// Copyright (C) 1998, 1999, 2000, 2001, 2002 Red Hat, Inc.
//
// eCos is free software; you can redistribute it and/or modify it under
// the terms of the GNU General Public License as published by the Free
// Software Foundation; either version 2 or (at your option) any later version.
//
// eCos is distributed in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// for more details.
//
// You should have received a copy of the GNU General Public License along
// with eCos; if not, write to the Free Software Foundation, Inc.,
// 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.
//
// As a special exception, if other files instantiate templates or use macros
// or inline functions from this file, or you compile this file and link it
// with other works to produce a work based on this file, this file does not
// by itself cause the resulting work to be covered by the GNU General Public
// License. However the source code for this file must still be made available
// in accordance with section (3) of the GNU General Public License.
//
// This exception does not invalidate any other reasons why a work based on
// this file might be covered by the GNU General Public License.
//
// Alternative licenses for eCos may be arranged by contacting Red Hat, Inc.
// at http://sources.redhat.com/ecos/ecos-license/
// -------------------------------------------
//####ECOSGPLCOPYRIGHTEND####
//===========================================================================
